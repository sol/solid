name: build

permissions: write-all

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.os }} / GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        ghc:
          - 9.6.2
    steps:
      - uses: actions/checkout@v3
      - run: git tag v0.2 -f
      - run: git push origin --tags -f
      - uses: hspec/setup-haskell@v1
        with:
          ghc-version: ${{ matrix.ghc }}
        id: setup-haskell

      - uses: actions/cache@v3
        with:
          path: ${{ runner.os == 'Windows' && 'C:/cabal/store/' || runner.os == 'macOS' && '~/.cabal/store/' || '~/.local/state/cabal/store/' }}
          key: ${{ runner.os }}-${{ steps.setup-haskell.outputs.ghc-version }}-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-${{ steps.setup-haskell.outputs.ghc-version }}-

      - uses: sol/run-haskell-tests@v1
      - run: cabal install doctest
      - run: cabal repl --build-depends=QuickCheck --build-depends=template-haskell --with-ghc=doctest --repl-options='-w -Wdefault'

      - run: cabal install
      - run: cabal install markdown-unlit

      - run: solid -pgmL=markdown-unlit README.lhs
      - run: (cd book && make && make toc)
      - run: git diff --quiet || (git diff && false)

      - run: |
          git tag v0.2 -f
          git push origin --tags -f
          gh release create v0.2 --prerelease || true
          gh release upload v0.2 `find dist-newstyle/build/ -name solid -type f` --clobber
        # if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ github.token }}

#  success:
#    needs: build
#    runs-on: ubuntu-latest
#    if: always() # this is required as GitHub considers "skipped" jobs as "passed" when checking branch protection rules
#
#    steps:
#      - run: false
#        if: needs.build.result != 'success'
#
#      - uses: actions/checkout@v3
#      - name: Check for trailing whitespace
#        run: '! git grep -I "\s\+$"'
