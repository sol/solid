cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.36.0.
--
-- see: https://github.com/sol/hpack

name:           solid
version:        0.0.0
author:         Simon Hengel <sol@typeful.net>
maintainer:     Simon Hengel <sol@typeful.net>
copyright:      (c) 2022-2023 Simon Hengel
license:        MIT
license-file:   LICENSE
build-type:     Simple

library
  exposed-modules:
      ByteString
      Char
      Data.Sliced.ByteArray
      Data.Sliced.ByteArray.Conversion
      Data.Sliced.ByteArray.Unsafe
      Data.Sliced.ByteArray.Utf8
      Data.Sliced.ByteArray.Util
      Directory
      Either
      Env
      Env.Raw
      Exception
      FilePath
      Haskell
      IO
      IO.Handle
      List
      Maybe
      Platform
      Prelude
      Process
      Process.Config
      Process.Config.FileStream
      Process.Config.STDERR
      Process.Config.STDIN
      Process.Config.STDOUT
      Process.Self
      Solid
      Solid.Ansi
      Solid.Ansi.Types
      Solid.Bytes
      Solid.Bytes.Unsafe
      Solid.ByteString
      Solid.Common
      Solid.Driver
      Solid.FilePath
      Solid.Foreign.C
      Solid.MD5
      Solid.Process.Typed
      Solid.Process.Typed.Internal
      Solid.StackTrace
      Solid.String
      Solid.ToString
      Solid.TypeLits
      Solid.Util
      String
      Temp
      Word8
      System.Directory.Import
      System.Environment.Import
      System.FilePath.Import
  hs-source-dirs:
      src
      import
  default-extensions:
      NoImplicitPrelude
      DataKinds
      DeriveAnyClass
      DuplicateRecordFields
      LambdaCase
      LexicalNegation
      OverloadedRecordDot
      OverloadedStrings
      NoFieldSelectors
  ghc-options: -Wall -fhide-source-paths -Werror=operator-whitespace
  build-tool-depends:
      solid-pp:solid-pp
  build-depends:
      async
    , bytestring
    , containers
    , directory
    , doctest
    , file-io
    , filepath
    , haskell-base
    , markdown-unlit
    , primitive >=0.9.1
    , process
    , random
    , simdutf
    , solid-pp
    , stm
    , text
    , time
    , unix ==2.8.1.0
    , unliftio-core
  default-language: GHC2021

executable solid
  main-is: Main.hs
  other-modules:
      Distribution.Client.Main
  hs-source-dirs:
      driver
      vendor/cabal-install
  default-extensions:
      NoImplicitPrelude
      DataKinds
      DeriveAnyClass
      DuplicateRecordFields
      LambdaCase
      LexicalNegation
      OverloadedRecordDot
      OverloadedStrings
      NoFieldSelectors
  ghc-options: -Wall -fhide-source-paths -Werror=operator-whitespace
  build-tool-depends:
      solid-pp:solid-pp
  build-depends:
      Cabal
    , async
    , bytestring
    , cabal-install ==3.10.1.0
    , containers
    , directory
    , doctest
    , file-io
    , filepath
    , haskell-base
    , hpack
    , markdown-unlit
    , optparse-applicative
    , pantry
    , primitive >=0.9.1
    , process
    , random
    , rio
    , simdutf
    , solid
    , solid-pp
    , stack >=2.13.1
    , stm
    , text
    , time
    , unix ==2.8.1.0
    , unliftio-core
  default-language: GHC2021

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      ByteString
      Char
      Data.Sliced.ByteArray
      Data.Sliced.ByteArray.Conversion
      Data.Sliced.ByteArray.Unsafe
      Data.Sliced.ByteArray.Utf8
      Data.Sliced.ByteArray.Util
      Directory
      Either
      Env
      Env.Raw
      Exception
      FilePath
      Haskell
      IO
      IO.Handle
      List
      Maybe
      Platform
      Prelude
      Process
      Process.Config
      Process.Config.FileStream
      Process.Config.STDERR
      Process.Config.STDIN
      Process.Config.STDOUT
      Process.Self
      Solid
      Solid.Ansi
      Solid.Ansi.Types
      Solid.Bytes
      Solid.Bytes.Unsafe
      Solid.ByteString
      Solid.Common
      Solid.Driver
      Solid.FilePath
      Solid.Foreign.C
      Solid.MD5
      Solid.Process.Typed
      Solid.Process.Typed.Internal
      Solid.StackTrace
      Solid.String
      Solid.ToString
      Solid.TypeLits
      Solid.Util
      String
      Temp
      Word8
      System.Directory.Import
      System.Environment.Import
      System.FilePath.Import
      ByteStringSpec
      CharSpec
      Data.Sliced.ByteArray.ConversionSpec
      Data.Sliced.ByteArray.UnsafeSpec
      Data.Sliced.ByteArray.Utf8Spec
      Data.Sliced.ByteArray.UtilSpec
      Data.Sliced.ByteArraySpec
      EitherSpec
      EnvSpec
      ExceptionSpec
      FilePathSpec
      Gen
      Helper
      IO.HandleSpec
      IOSpec
      ListSpec
      MaybeSpec
      Process.Config.STDERRSpec
      Process.Config.STDINSpec
      Process.Config.STDOUTSpec
      Process.ConfigSpec
      Process.SelfSpec
      ProcessSpec
      Range
      Solid.AnsiSpec
      Solid.Bytes.UnsafeSpec
      Solid.CommonSpec
      Solid.DriverSpec
      Solid.Foreign.CSpec
      Solid.MD5Spec
      Solid.Process.TypedSpec
      Solid.StackTraceSpec
      Solid.ToStringSpec
      Solid.UtilSpec
      SolidSpec
      StringSpec
      TempSpec
      Word8Spec
      Test.Hspec.Hedgehog
  hs-source-dirs:
      src
      import
      test
      vendor/hspec-hedgehog/src
  default-extensions:
      NoImplicitPrelude
      DataKinds
      DeriveAnyClass
      DuplicateRecordFields
      LambdaCase
      LexicalNegation
      OverloadedRecordDot
      OverloadedStrings
      NoFieldSelectors
  ghc-options: -Wall -fhide-source-paths -Werror=operator-whitespace
  build-tools:
      solid
  build-tool-depends:
      hspec-discover:hspec-discover
    , solid-pp:solid-pp
  build-depends:
      QuickCheck
    , async
    , base64-bytestring
    , bytestring
    , containers
    , directory
    , doctest
    , file-io
    , filepath
    , haskell-base
    , hedgehog
    , hedgehog-classes
    , hspec ==2.*
    , hspec-core
    , markdown-unlit
    , mockery
    , primitive >=0.9.1
    , process
    , random
    , silently
    , simdutf
    , solid-pp
    , splitmix
    , stm
    , temporary
    , text
    , time
    , unix ==2.8.1.0
    , unliftio-core
  default-language: GHC2021
